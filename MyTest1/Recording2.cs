///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording2 recording.
    /// </summary>
    [TestModule("9bdfc473-3ad0-4dce-a33e-7ade7488c946", ModuleType.Recording, 1)]
    public partial class Recording2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest1Repository repository.
        /// </summary>
        public static MyTest1Repository repo = MyTest1Repository.Instance;

        static Recording2 instance = new Recording2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording2()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording2 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ContactUs' at 42;9.", repo.ApplicationUnderTest.ContactUsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ContactUs.Click("42;9");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.IdContact' at 249;18.", repo.ApplicationUnderTest.IdContactInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.IdContact.Click("249;18");
            Delay.Milliseconds(0);
            
            Mouse_Click_ContactUsMyStoreGoogleChrome(repo.ContactUsMyStoreGoogleChrome.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Email' at 94;14.", repo.ApplicationUnderTest.EmailInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Email.Click("94;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'sakatagintoki064@gmail.com' with focus on 'ApplicationUnderTest.Email'.", repo.ApplicationUnderTest.EmailInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Email.PressKeys("sakatagintoki064@gmail.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.IdOrder' at 101;8.", repo.ApplicationUnderTest.IdOrderInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.IdOrder.Click("101;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'sas' with focus on 'ApplicationUnderTest.IdOrder'.", repo.ApplicationUnderTest.IdOrderInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.IdOrder.PressKeys("sas");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FileUpload' at 196;11.", repo.ApplicationUnderTest.FileUploadInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.FileUpload.Click("196;11");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.BaselineImage' at 44;85.", repo.Open.BaselineImageInfo, new RecordItemIndex(8));
            repo.Open.BaselineImage.Click("44;85");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Open.ButtonOpen' at 28;13.", repo.Open.ButtonOpenInfo, new RecordItemIndex(9));
            repo.Open.ButtonOpen.Click("28;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Message' at 460;179.", repo.ApplicationUnderTest.MessageInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Message.Click("460;179");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'sas' with focus on 'ApplicationUnderTest.Message'.", repo.ApplicationUnderTest.MessageInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Message.PressKeys("sas");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Send' at 61;14.", repo.ApplicationUnderTest.SendInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Send.Click("61;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Your message has been successfully sent to our team.') on item 'ApplicationUnderTest.YourMessageHasBeenSuccessfullySent'.", repo.ApplicationUnderTest.YourMessageHasBeenSuccessfullySentInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.YourMessageHasBeenSuccessfullySentInfo, "InnerText", "Your message has been successfully sent to our team.");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
