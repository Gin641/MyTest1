///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace MyTest1
{
    public partial class RecordingBuy
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void totalProduct(RepoItemInfo products, RepoItemInfo totalProduct)
        {
        	IList<Ranorex.Unknown> list_products = products.CreateAdapters<Ranorex.Unknown>();
        	Ranorex.Unknown totalProducts = totalProduct.CreateAdapter<Ranorex.Unknown>(true);
        	int total = Int32.Parse(totalProducts.Element.GetAttributeValue("InnerText").ToString());
        	int sum = 0;
        	foreach(Ranorex.Unknown product in list_products){
        		sum += Int32.Parse(product.Element.GetAttributeValue("InnerText").ToString());
        	}
        	Validate.IsTrue(sum == total);
        }

        public void total(RepoItemInfo totalProduct, RepoItemInfo totalShipping, RepoItemInfo totalTax, RepoItemInfo total)
        {
        	double product = Double.Parse(totalProduct.CreateAdapter<Ranorex.Unknown>(true).Element.GetAttributeValue("InnerText").ToString().Replace("$",""));
        	double shipping = Double.Parse(totalShipping.CreateAdapter<Ranorex.Unknown>(true).Element.GetAttributeValue("InnerText").ToString().Replace("$",""));
        	double tax = Double.Parse(totalTax.CreateAdapter<Ranorex.Unknown>(true).Element.GetAttributeValue("InnerText").ToString().Replace("$",""));
        	double sum = Double.Parse(total.CreateAdapter<Ranorex.Unknown>(true).Element.GetAttributeValue("InnerText").ToString().Replace("$",""));
        	Validate.IsTrue(sum == (shipping + tax + product));
        }

    }
}
